{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport { TreeNode } from '../../vc-tree';\n/**\r\n * SelectNode wrapped the tree node.\r\n * Let's use SelectNode instead of TreeNode\r\n * since TreeNode is so confuse here.\r\n */\n\nexport default {\n  name: 'SelectNode',\n  functional: true,\n  isTreeNode: true,\n  props: TreeNode.props,\n  render: function render(h, context) {\n    var props = context.props,\n        slots = context.slots,\n        listeners = context.listeners,\n        data = context.data,\n        scopedSlots = context.scopedSlots;\n    var $slots = slots() || {};\n    var children = $slots['default'];\n    var slotsKey = Object.keys($slots);\n    var scopedSlotsTemp = {}; // for vue 2.5.x\n\n    slotsKey.forEach(function (name) {\n      scopedSlotsTemp[name] = function () {\n        return $slots[name];\n      };\n    });\n\n    var treeNodeProps = _extends({}, data, {\n      on: _extends({}, listeners, data.nativeOn),\n      props: props,\n      scopedSlots: _extends({}, scopedSlotsTemp, scopedSlots)\n    });\n\n    return h(TreeNode, treeNodeProps, [children]);\n  }\n};","map":{"version":3,"names":["_extends","TreeNode","name","functional","isTreeNode","props","render","h","context","slots","listeners","data","scopedSlots","$slots","children","slotsKey","Object","keys","scopedSlotsTemp","forEach","treeNodeProps","on","nativeOn"],"sources":["D:/Desktop/大三上/实训/项目2.0/xbr/前端/node_modules/ant-design-vue/es/vc-tree-select/src/SelectNode.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport { TreeNode } from '../../vc-tree';\r\n/**\r\n * SelectNode wrapped the tree node.\r\n * Let's use SelectNode instead of TreeNode\r\n * since TreeNode is so confuse here.\r\n */\r\nexport default {\r\n  name: 'SelectNode',\r\n  functional: true,\r\n  isTreeNode: true,\r\n  props: TreeNode.props,\r\n  render: function render(h, context) {\r\n    var props = context.props,\r\n        slots = context.slots,\r\n        listeners = context.listeners,\r\n        data = context.data,\r\n        scopedSlots = context.scopedSlots;\r\n\r\n    var $slots = slots() || {};\r\n    var children = $slots['default'];\r\n    var slotsKey = Object.keys($slots);\r\n    var scopedSlotsTemp = {}; // for vue 2.5.x\r\n    slotsKey.forEach(function (name) {\r\n      scopedSlotsTemp[name] = function () {\r\n        return $slots[name];\r\n      };\r\n    });\r\n    var treeNodeProps = _extends({}, data, {\r\n      on: _extends({}, listeners, data.nativeOn),\r\n      props: props,\r\n      scopedSlots: _extends({}, scopedSlotsTemp, scopedSlots)\r\n    });\r\n    return h(\r\n      TreeNode,\r\n      treeNodeProps,\r\n      [children]\r\n    );\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe;EACbC,IAAI,EAAE,YADO;EAEbC,UAAU,EAAE,IAFC;EAGbC,UAAU,EAAE,IAHC;EAIbC,KAAK,EAAEJ,QAAQ,CAACI,KAJH;EAKbC,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,OAAnB,EAA4B;IAClC,IAAIH,KAAK,GAAGG,OAAO,CAACH,KAApB;IAAA,IACII,KAAK,GAAGD,OAAO,CAACC,KADpB;IAAA,IAEIC,SAAS,GAAGF,OAAO,CAACE,SAFxB;IAAA,IAGIC,IAAI,GAAGH,OAAO,CAACG,IAHnB;IAAA,IAIIC,WAAW,GAAGJ,OAAO,CAACI,WAJ1B;IAMA,IAAIC,MAAM,GAAGJ,KAAK,MAAM,EAAxB;IACA,IAAIK,QAAQ,GAAGD,MAAM,CAAC,SAAD,CAArB;IACA,IAAIE,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAf;IACA,IAAIK,eAAe,GAAG,EAAtB,CAVkC,CAUR;;IAC1BH,QAAQ,CAACI,OAAT,CAAiB,UAAUjB,IAAV,EAAgB;MAC/BgB,eAAe,CAAChB,IAAD,CAAf,GAAwB,YAAY;QAClC,OAAOW,MAAM,CAACX,IAAD,CAAb;MACD,CAFD;IAGD,CAJD;;IAKA,IAAIkB,aAAa,GAAGpB,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;MACrCU,EAAE,EAAErB,QAAQ,CAAC,EAAD,EAAKU,SAAL,EAAgBC,IAAI,CAACW,QAArB,CADyB;MAErCjB,KAAK,EAAEA,KAF8B;MAGrCO,WAAW,EAAEZ,QAAQ,CAAC,EAAD,EAAKkB,eAAL,EAAsBN,WAAtB;IAHgB,CAAX,CAA5B;;IAKA,OAAOL,CAAC,CACNN,QADM,EAENmB,aAFM,EAGN,CAACN,QAAD,CAHM,CAAR;EAKD;AA/BY,CAAf"},"metadata":{},"sourceType":"module"}
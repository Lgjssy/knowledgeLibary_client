{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nconst t = [\"INIT\", \"INPUT\", \"CHANGED\"];\nvar e = {\n  name: \"VueTinymce\",\n  model: {\n    prop: \"content\",\n    event: \"change\"\n  },\n  props: {\n    content: {\n      type: [String, Object],\n      default: \"\"\n    },\n    setup: {\n      type: Function,\n      default: function () {}\n    },\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    setting: {\n      type: Object,\n      default: function () {\n        return {};\n      }\n    },\n    debug: Boolean\n  },\n\n  render(t) {\n    return \"undefined\" == typeof tinymce ? t(\"div\", \"tinymce is undefined\") : t(\"div\", {\n      attrs: {\n        id: this.id\n      }\n    });\n  },\n\n  data: () => ({\n    id: \"vue-tinymce-\" + Date.now() + Math.floor(1e3 * Math.random()),\n    editor: null,\n    status: 0,\n    bookmark: null\n  }),\n  watch: {\n    content(t, e) {\n      if (this.changedLog({\n        type: \"propsChanged\"\n      }, this.status, `${t} | ${e}`, \"--\"), 1 !== this.status && e !== t && this.editor && this.editor.initialized) return null === t ? this.resetContent(\"\") : void this.setContent(t);\n    },\n\n    disabled(t) {\n      this.editor.setMode(t ? \"readonly\" : \"design\");\n    }\n\n  },\n\n  created() {\n    if (this.changedLog = this.debug ? (console.warn(\"`@packy-tang/vue-tinymce`进入debug模式\"), (e, n, o, i) => console.log(\"来自：%s | 状态：%s \\n %s \\n %s\", e.type, t[n], o, i)) : () => !1, \"undefined\" == typeof tinymce) throw new Error(\"tinymce undefined\");\n  },\n\n  beforeMount() {\n    const t = Object.assign({}, this.setting, {\n      selector: \"#\" + this.id,\n      setup: t => {\n        this.setup(t), t.on(\"init\", () => {\n          this.setContent(this.content, t), t.on(\"keyup input\", t => {\n            this.status = 1;\n          }), t.on(\"SetContent\", e => {\n            this.changedLog(e, this.status, t.getContent(), \"--\");\n          }), t.on(\"Blur\", e => {\n            this.status = 0, this.changedLog(e, this.status, t.getContent(), \"--\");\n          }), t.on(\"input keyup Change Undo Redo ExecCommand NodeChange\", e => {\n            this.onChanged(e, t);\n          });\n        });\n      }\n    });\n    this.editor = tinymce.createEditor(t.selector, t);\n  },\n\n  mounted() {\n    this.editor.targetElm = this.$el, this.editor.render();\n  },\n\n  updated() {\n    this.editor.render();\n  },\n\n  beforeDestroy: function () {\n    this.editor.remove();\n  },\n  methods: {\n    setContent(t, e) {\n      e || (e = this.editor), e.setContent(t), e.selection.moveToBookmark(this.bookmark);\n    },\n\n    resetContent(t, e) {\n      if (e || (e = this.editor), e.resetContent) return e.resetContent(t);\n      e.setContent(t), e.setDirty(!1), e.undoManager.clear();\n    },\n\n    onChanged(t, e) {\n      e || (e = this.editor), \"change\" === t.type && (this.bookmark = t.level.bookmark);\n      const n = e.getContent();\n      this.changedLog(t, this.status, n, \"--\"), this.$emit(\"change\", n);\n    }\n\n  }\n};\nvar n = new class {\n  constructor() {\n    const {\n      prefix: t\n    } = {\n      prefix: \"\"\n    };\n    this.prefix = t;\n  }\n\n  install(t, n = {}) {\n    const o = n.prefix || this.prefix,\n          i = {\n      VueTinymce: e\n    };\n    Object.keys(i).forEach(e => {\n      const n = i[e];\n      t.component(o + n.name, n);\n    });\n  }\n\n}();\nexport default n;\nexport { e as VueTinymce };","map":{"version":3,"mappings":"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","names":["status","name","model","prop","event","props","content","type","String","Object","default","setup","Function","disabled","Boolean","setting","debug","[object Object]","createElement","tinymce","attrs","id","this","data","Date","now","Math","floor","random","editor","bookmark","watch","val","oldVal","changedLog","initialized","resetContent","setContent","setMode","console","warn","e","_status","log","Error","assign","selector","on","getContent","onChanged","createEditor","targetElm","$el","render","beforeDestroy","remove","methods","selection","moveToBookmark","setDirty","undoManager","clear","level","$emit","prefix","Vue","options","components","VueTinymce","keys","forEach","key","component"],"sources":["../src/vue-tinymce.vue","../src/main.js"],"sourcesContent":["<script>\r\n\r\n/**\r\n * 注：编辑器二次刷新处理\r\n * 编辑器二次刷新具体效果为输入光标重置到第一行第一个字前。\r\n * 这种效果根本无法正常录入，其原因是双向绑定数据导致编辑器数据更新所致。\r\n * 根据编辑器的不同状态做标记，当标记为`INPUT`录入时，数据将不会更新至编辑器，\r\n * 从而避免二次更新的情况，具体请看`content`部分和`editor event`部分的代码。\r\n * */\r\n\r\nconst INIT = 0;\r\nconst INPUT = 1;\r\nconst CHANGED = 2;\r\n\r\nconst status = ['INIT', 'INPUT', 'CHANGED']\r\nconst changedLog = debug=>{\r\n    if(!debug) return ()=>false\r\n    console.warn(\"`@packy-tang/vue-tinymce`进入debug模式\");\r\n    return (e, _status, val, oldVal)=>console.log(`来自：%s | 状态：%s \\n %s \\n %s`, e.type, status[_status], val, oldVal)\r\n}\r\n\r\nexport default {\r\n    name: \"VueTinymce\",\r\n    model: {\r\n        prop: \"content\",\r\n        event: \"change\"\r\n    },\r\n    props: {\r\n        content: {\r\n            type: [String, Object],\r\n            default: ''\r\n        },\r\n        setup: {\r\n            type: Function,\r\n            default: function(){}\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        setting: {\r\n            type: Object,\r\n            default: function(){ \r\n                return {};\r\n            }\r\n        },\r\n        debug: Boolean\r\n    },\r\n    render(createElement){\r\n        if(typeof tinymce === \"undefined\"){\r\n            return createElement('div', \"tinymce is undefined\"); \r\n        }\r\n        return createElement('div', {\r\n            attrs: {\r\n                id: this.id\r\n            }\r\n        });\r\n    },\r\n    data(){\r\n        return {\r\n            id: 'vue-tinymce-'+Date.now()+Math.floor(Math.random() * 1000),\r\n            editor: null,\r\n            status: INIT,\r\n            bookmark: null\r\n        }\r\n    },\r\n    watch: {\r\n        content(val, oldVal){\r\n            this.changedLog({ type: \"propsChanged\" }, this.status, `${val} | ${oldVal}`, \"--\")\r\n            if(this.status === INPUT || oldVal === val) return;\r\n            if(!this.editor || !this.editor.initialized) return; // fix editor plugin is loading and set content will throw error.\r\n            if(val === null) return this.resetContent(\"\");\r\n            this.setContent(val);\r\n        },\r\n        disabled(val){\r\n            this.editor.setMode(val?\"readonly\":\"design\")\r\n        }\r\n    },\r\n    created(){\r\n        this.changedLog = changedLog(this.debug)\r\n        if(typeof tinymce === \"undefined\") throw new Error('tinymce undefined');\r\n    },\r\n    beforeMount () {\r\n        const setting = Object.assign({},\r\n            this.setting,\r\n            {\r\n                selector: '#'+this.id,\r\n                setup: (editor)=> {\r\n                    this.setup(editor);\r\n                    // console.log('setup');\r\n                    editor.on('init', ()=>{\r\n                        // console.log('init', this.content);\r\n                        this.setContent(this.content, editor)\r\n                        editor.on('keyup input', e=>{ //只在编辑器中打字才会触发\r\n                            this.status = INPUT       //编辑器录入文字时标记为`INPUT`状态\r\n                        })\r\n                        editor.on('SetContent', e=>{ //编辑器在插入图片和撤销/重做时触发，组件content更新数据也会导致触发\r\n                            this.changedLog(e, this.status, editor.getContent(), \"--\")\r\n                        })\r\n                        editor.on('Blur', e=>{\r\n                            this.status = INIT\r\n                            this.changedLog(e, this.status, editor.getContent(), \"--\")\r\n                        })\r\n                        editor.on('input keyup Change Undo Redo ExecCommand NodeChange', e=>{\r\n                            this.onChanged(e, editor)\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        this.editor = tinymce.createEditor(setting.selector, setting)\r\n    },\r\n    mounted(){\r\n        this.editor.targetElm = this.$el\r\n        this.editor.render()\r\n    },\r\n    updated () {\r\n        this.editor.render()\r\n    },\r\n    beforeDestroy: function(){\r\n        this.editor.remove();\r\n    },\r\n    methods: {\r\n        setContent(val, editor){\r\n            if(!editor) editor = this.editor\r\n            editor.setContent(val)\r\n            editor.selection.moveToBookmark(this.bookmark)\r\n        },\r\n        resetContent(val, editor){\r\n            if(!editor) editor = this.editor\r\n            if(!!editor.resetContent) return editor.resetContent(val)\r\n            editor.setContent(val)\r\n            editor.setDirty(false)\r\n            editor.undoManager.clear()\r\n        },\r\n        onChanged(e, editor){\r\n            if(!editor) editor = this.editor\r\n            if(e.type === 'change') this.bookmark = e.level.bookmark\r\n            const content = editor.getContent()\r\n            this.changedLog(e, this.status, content, \"--\")\r\n            this.$emit('change', content);\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import VueTinymce from './vue-tinymce.vue'\r\nexport { VueTinymce }\r\nclass VuePlugin{\r\n    constructor(){\r\n        const { prefix } = { prefix: \"\" }\r\n        this.prefix = prefix;\r\n    }\r\n    install(Vue, options={}){\r\n        const prefix = options.prefix || this.prefix\r\n        const components = {\r\n            VueTinymce\r\n        }\r\n        Object.keys(components).forEach(key => {\r\n            const component = components[key];\r\n            Vue.component(prefix+component.name, component);\r\n        });\r\n    }\r\n}\r\nexport default new VuePlugin()"]},"metadata":{},"sourceType":"module"}
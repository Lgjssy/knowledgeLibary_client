{"ast":null,"code":"import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\n/**\r\n * Wrap of sub component which need use as Button capacity (like Icon component).\r\n * This helps accessibility reader to tread as a interactive button to operation.\r\n */\n\nimport KeyCode from './KeyCode';\nimport PropTypes from './vue-types';\nvar inlineStyle = {\n  border: 0,\n  background: 'transparent',\n  padding: 0,\n  lineHeight: 'inherit',\n  display: 'inline-block'\n};\nvar TransButton = {\n  props: {\n    noStyle: PropTypes.bool\n  },\n  methods: {\n    onKeyDown: function onKeyDown(event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode === KeyCode.ENTER) {\n        event.preventDefault();\n      }\n    },\n    onKeyUp: function onKeyUp(event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode === KeyCode.ENTER) {\n        this.$emit('click', event);\n      }\n    },\n    setRef: function setRef(btn) {\n      this.div = btn;\n    },\n    focus: function focus() {\n      if (this.div) {\n        this.div.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.div) {\n        this.div.blur();\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var noStyle = this.$props.noStyle;\n    return h('div', _mergeJSXProps([{\n      attrs: {\n        role: 'button',\n        tabIndex: 0\n      }\n    }, {\n      directives: [{\n        name: 'ant-ref',\n        value: this.setRef\n      }],\n      on: _extends({}, this.$listeners, {\n        keydown: this.onKeyDown,\n        keyup: this.onKeyUp\n      })\n    }, {\n      style: _extends({}, !noStyle ? inlineStyle : null)\n    }]), [this.$slots['default']]);\n  }\n};\nexport default TransButton;","map":{"version":3,"names":["_mergeJSXProps","_extends","KeyCode","PropTypes","inlineStyle","border","background","padding","lineHeight","display","TransButton","props","noStyle","bool","methods","onKeyDown","event","keyCode","ENTER","preventDefault","onKeyUp","$emit","setRef","btn","div","focus","blur","render","h","arguments","$props","attrs","role","tabIndex","directives","name","value","on","$listeners","keydown","keyup","style","$slots"],"sources":["D:/Desktop/大三上/实训/项目2.0/xbr/xbr/前端/node_modules/ant-design-vue/es/_util/transButton.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\r\nimport _extends from 'babel-runtime/helpers/extends';\r\n/**\r\n * Wrap of sub component which need use as Button capacity (like Icon component).\r\n * This helps accessibility reader to tread as a interactive button to operation.\r\n */\r\nimport KeyCode from './KeyCode';\r\nimport PropTypes from './vue-types';\r\n\r\nvar inlineStyle = {\r\n  border: 0,\r\n  background: 'transparent',\r\n  padding: 0,\r\n  lineHeight: 'inherit',\r\n  display: 'inline-block'\r\n};\r\n\r\nvar TransButton = {\r\n  props: {\r\n    noStyle: PropTypes.bool\r\n  },\r\n\r\n  methods: {\r\n    onKeyDown: function onKeyDown(event) {\r\n      var keyCode = event.keyCode;\r\n\r\n      if (keyCode === KeyCode.ENTER) {\r\n        event.preventDefault();\r\n      }\r\n    },\r\n    onKeyUp: function onKeyUp(event) {\r\n      var keyCode = event.keyCode;\r\n\r\n      if (keyCode === KeyCode.ENTER) {\r\n        this.$emit('click', event);\r\n      }\r\n    },\r\n    setRef: function setRef(btn) {\r\n      this.div = btn;\r\n    },\r\n    focus: function focus() {\r\n      if (this.div) {\r\n        this.div.focus();\r\n      }\r\n    },\r\n    blur: function blur() {\r\n      if (this.div) {\r\n        this.div.blur();\r\n      }\r\n    }\r\n  },\r\n\r\n  render: function render() {\r\n    var h = arguments[0];\r\n    var noStyle = this.$props.noStyle;\r\n\r\n\r\n    return h(\r\n      'div',\r\n      _mergeJSXProps([{\r\n        attrs: {\r\n          role: 'button',\r\n          tabIndex: 0\r\n        }\r\n      }, {\r\n        directives: [{\r\n          name: 'ant-ref',\r\n          value: this.setRef\r\n        }],\r\n        on: _extends({}, this.$listeners, {\r\n          keydown: this.onKeyDown,\r\n          keyup: this.onKeyUp\r\n        })\r\n      }, {\r\n        style: _extends({}, !noStyle ? inlineStyle : null)\r\n      }]),\r\n      [this.$slots['default']]\r\n    );\r\n  }\r\n};\r\n\r\nexport default TransButton;"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA;AACA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,WAAW,GAAG;EAChBC,MAAM,EAAE,CADQ;EAEhBC,UAAU,EAAE,aAFI;EAGhBC,OAAO,EAAE,CAHO;EAIhBC,UAAU,EAAE,SAJI;EAKhBC,OAAO,EAAE;AALO,CAAlB;AAQA,IAAIC,WAAW,GAAG;EAChBC,KAAK,EAAE;IACLC,OAAO,EAAET,SAAS,CAACU;EADd,CADS;EAKhBC,OAAO,EAAE;IACPC,SAAS,EAAE,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;MACnC,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;;MAEA,IAAIA,OAAO,KAAKf,OAAO,CAACgB,KAAxB,EAA+B;QAC7BF,KAAK,CAACG,cAAN;MACD;IACF,CAPM;IAQPC,OAAO,EAAE,SAASA,OAAT,CAAiBJ,KAAjB,EAAwB;MAC/B,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;;MAEA,IAAIA,OAAO,KAAKf,OAAO,CAACgB,KAAxB,EAA+B;QAC7B,KAAKG,KAAL,CAAW,OAAX,EAAoBL,KAApB;MACD;IACF,CAdM;IAePM,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;MAC3B,KAAKC,GAAL,GAAWD,GAAX;IACD,CAjBM;IAkBPE,KAAK,EAAE,SAASA,KAAT,GAAiB;MACtB,IAAI,KAAKD,GAAT,EAAc;QACZ,KAAKA,GAAL,CAASC,KAAT;MACD;IACF,CAtBM;IAuBPC,IAAI,EAAE,SAASA,IAAT,GAAgB;MACpB,IAAI,KAAKF,GAAT,EAAc;QACZ,KAAKA,GAAL,CAASE,IAAT;MACD;IACF;EA3BM,CALO;EAmChBC,MAAM,EAAE,SAASA,MAAT,GAAkB;IACxB,IAAIC,CAAC,GAAGC,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIjB,OAAO,GAAG,KAAKkB,MAAL,CAAYlB,OAA1B;IAGA,OAAOgB,CAAC,CACN,KADM,EAEN5B,cAAc,CAAC,CAAC;MACd+B,KAAK,EAAE;QACLC,IAAI,EAAE,QADD;QAELC,QAAQ,EAAE;MAFL;IADO,CAAD,EAKZ;MACDC,UAAU,EAAE,CAAC;QACXC,IAAI,EAAE,SADK;QAEXC,KAAK,EAAE,KAAKd;MAFD,CAAD,CADX;MAKDe,EAAE,EAAEpC,QAAQ,CAAC,EAAD,EAAK,KAAKqC,UAAV,EAAsB;QAChCC,OAAO,EAAE,KAAKxB,SADkB;QAEhCyB,KAAK,EAAE,KAAKpB;MAFoB,CAAtB;IALX,CALY,EAcZ;MACDqB,KAAK,EAAExC,QAAQ,CAAC,EAAD,EAAK,CAACW,OAAD,GAAWR,WAAX,GAAyB,IAA9B;IADd,CAdY,CAAD,CAFR,EAmBN,CAAC,KAAKsC,MAAL,CAAY,SAAZ,CAAD,CAnBM,CAAR;EAqBD;AA7De,CAAlB;AAgEA,eAAehC,WAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nlet id = 1000;\nimport BugData from './components/Bug.vue';\nexport default {\n  methods: {\n    logoutComfirm() {\n      this.$confirm('要退出登录吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '已退出登录'\n        });\n        this.$router.replace({\n          path: '/'\n        });\n        location.reload();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消操作'\n        });\n      });\n    },\n\n    //所有用例列表接口\n    handleAllCase() {},\n\n    //el-tree点击事件\n    myEvent(d1, d2, d3) {\n      this.$emit(\"myEvent\", d1.id);\n    },\n\n    //d1.label\n    //下拉列表\n    handleDropdown(v) {\n      this.dropdownShow = v;\n      if (v) return;\n      this.currentEle.style.cssText += \"display:none\";\n    },\n\n    //增删改鼠标移入移出隐藏显示\n    //鼠标移入\n    onMouseOver: function (event) {\n      event.target.parentElement.querySelector(\".comp-tr-node--btns\").style.cssText += \"display:block\";\n      this.currentEle = event.target.parentElement.querySelector(\".comp-tr-node--btns\");\n    },\n    //鼠标移出\n    onMouseOut: function (event) {\n      if (this.dropdownShow) return;\n      event.target.parentElement.querySelector(\".comp-tr-node--btns\").style.cssText += \"display:none\";\n    },\n\n    //新增一级目录模块点击事件\n    handleNewMoudle() {\n      this.data.push({\n        id: id++,\n        label: \"未命名模块\",\n        children: [],\n        isEdit: true\n      });\n    },\n\n    //确定之后加入tree内\n    NewModuleGo() {\n      this.data.push({\n        id: id++,\n        label: this.form_name,\n        children: [],\n        isEdit: false\n      });\n    },\n\n    //新增按钮\n    append(node, data) {\n      if (node.level >= this.MAX_LEVEL) {\n        this.$message.warning(\"当前目录已达到\" + this.MAX_LEVEL + \"级，无法新增！\");\n        return false;\n      } //新定义一个对象\n\n\n      const newChild = {\n        id: id++,\n        label: \"请输入模块名\",\n        children: [],\n        isEdit: true\n      };\n\n      if (!data.children) {\n        this.$set(data, \"children\", []);\n      }\n\n      data.children.push(newChild); //新增子节点到3级\n\n      console.log(node, data);\n      this.$nextTick(() => {\n        if (this.$refs[\"slotTreeInput\" + data[this.id]]) {\n          this.$refs[\"slotTreeInput\" + data[this.id]].$refs.input.focus();\n        }\n      });\n    },\n\n    //删除按钮\n    remove(node, data) {\n      const parent = node.parent;\n      const children = parent.data.children || parent.data;\n      const index = children.findIndex(d => d.id === data.id);\n      children.splice(index, 1);\n    },\n\n    //编辑按钮\n    handleInput(node, data) {\n      // 修改节点\n      console.log(node, data); // 退出编辑状态\n\n      if (data.isEdit) {\n        this.$set(data, \"isEdit\", false);\n      }\n    },\n\n    handleEdit(node, data) {\n      // 编辑节点\n      console.log(node, data); // 设置编辑状态\n\n      if (!data.isEdit) {\n        this.$set(data, \"isEdit\", true);\n      } // 输入框聚焦\n\n\n      this.$nextTick(() => {\n        if (this.$refs[\"slotTreeInput\" + data[this.id]]) {\n          this.$refs[\"slotTreeInput\" + data[this.id]].$refs.input.focus();\n        }\n      });\n    },\n\n    //拖拽点击事件\n    handleDragStart(node, ev) {// console.log(\"drag start\", node);\n    },\n\n    handleDragEnter(draggingNode, dropNode, ev) {//console.log(\"tree drag enter: \", dropNode.label);\n    },\n\n    handleDragLeave(draggingNode, dropNode, ev) {// console.log(\"tree drag leave: \", dropNode.label);\n    },\n\n    handleDragOver(draggingNode, dropNode, ev) {// console.log(\"tree drag over: \", dropNode.label);\n    },\n\n    handleDragEnd(draggingNode, dropNode, dropType, ev) {// console.log(\"tree drag end: \", dropNode && dropNode.label, dropType);\n    },\n\n    handleDrop(draggingNode, dropNode, dropType, ev) {// console.log(\"tree drop: \", dropNode.label, dropType);\n    },\n\n    //拖拽点击事件\n    allowDrop(draggingNode, dropNode, type) {\n      if (dropNode.data.label === \"二级 3-1\") {\n        return type !== \"inner\";\n      } else {\n        return true;\n      }\n    },\n\n    allowDrag(draggingNode) {\n      return draggingNode.data.label.indexOf(\"三级 3-2-2\") === -1;\n    },\n\n    //顶层标签页切换\n    handleSelect(key, keyPath) {\n      console.log(key, keyPath);\n    },\n\n    //模块管理\n    methodManage() {\n      this.leftShow1 = !this.leftShow1, this.leftShow2 = !this.leftShow2, this.leftShow3 = !this.leftShow3;\n    } //模块选择\n\n\n  },\n  //树形hhh\n  props: {\n    bool: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  created() {\n    // 初始值\n    this.startId = this.NODE_ID_START;\n  },\n\n  data() {\n    //模块选择树部分\n    const data = [{\n      id: 1,\n      label: '用例管理',\n      children: [{\n        id: 4,\n        label: '用例first',\n        children: [{\n          id: 9,\n          label: '三级 1-1-1'\n        }, {\n          id: 10,\n          label: '三级 1-1-2'\n        }]\n      }]\n    }, {\n      id: 2,\n      label: '一级 2',\n      children: [{\n        id: 5,\n        label: '二级 2-1'\n      }, {\n        id: 6,\n        label: '二级 2-2'\n      }]\n    }, {\n      id: 3,\n      label: '一级 3',\n      children: [{\n        id: 7,\n        label: '二级 3-1'\n      }, {\n        id: 8,\n        label: '二级 3-2'\n      }]\n    }];\n    return {\n      form_name: \"\",\n      form_description: \"\",\n      data: JSON.parse(JSON.stringify(data)),\n      currentEle: null,\n      //操作下拉列表 当前图表元素 省略号\n      dropdownShow: false,\n      //下拉列表当前显示状态\n      setTree: [],\n      // tree数据\n      id: \"id\",\n      // id对应字段\n      MAX_LEVEL: 2,\n      // 设定最大层级\n      NODE_ID_START: 0,\n      // 新增节点id，逐次递减\n      startId: null,\n      //页面可拖拽\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      dialogFormVisible: false,\n      circleUrl: \"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\",\n      //顶层标签页切换\n      activeIndex2: '1',\n      //左侧模块\n      //树部分\n      data: JSON.parse(JSON.stringify(data)),\n      data: JSON.parse(JSON.stringify(data)),\n      //模块管理部分\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: true,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      leftShow1: true,\n      leftShow2: false,\n      leftShow3: false,\n      //项目选择部分\n      options: [{\n        value: '选项1',\n        label: '黄金糕'\n      }, {\n        value: '选项2',\n        label: '双皮奶'\n      }, {\n        value: '选项3',\n        label: '蚵仔煎'\n      }, {\n        value: '选项4',\n        label: '龙须面'\n      }, {\n        value: '选项5',\n        label: '北京烤鸭'\n      }],\n      value: '',\n      props: {\n        label: 'name',\n        children: 'zones'\n      },\n      count: 1\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["methods","logoutComfirm","confirmButtonText","cancelButtonText","type","then","message","path","location","catch","handleAllCase","myEvent","handleDropdown","onMouseOver","event","style","cssText","onMouseOut","handleNewMoudle","id","label","children","isEdit","NewModuleGo","append","data","console","remove","handleInput","handleEdit","handleDragStart","handleDragEnter","handleDragLeave","handleDragOver","handleDragEnd","handleDrop","allowDrop","allowDrag","handleSelect","methodManage","props","bool","default","created","form_name","form_description","currentEle","dropdownShow","setTree","MAX_LEVEL","NODE_ID_START","startId","defaultProps","dialogFormVisible","circleUrl","activeIndex2","form","name","region","date1","date2","delivery","resource","desc","leftShow1","leftShow2","leftShow3","options","value","count"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n <el-container style=\"background-color: #e5f2ff;height:720px;margin:0px\">\n \n  <el-header background-color=\"white\" style=\"background-color: #e5f2ff;padding:0px;margin:0px\">\n    <div style=\"background-color:white;position:absolute;width:100%\"></div>\n    \n    <el-row background-color=\"white\" style=\"background-color: #e5f2ff;\">\n    \n      <el-col :span=\"6\"  style=\"background-color:white\" >\n         <div  style=\"height:100px;z-index:100;font-size:20px;color:black;text-align:center;margin-top:-15px\"><img src=\"./images/icon.png\" width=\"50\" height=\"50\" style=\"position: relative;top: 15px;\"/>科大国创项目管理系统</div>  </el-col>\n      <el-col :span=\"15\">\n         <el-menu\n          :default-active=\"5\"\n          class=\"el-menu-demo\"\n          mode=\"horizontal\"\n          @select=\"handleSelect\"\n          background-color=\"white\"\n          text-color=\"black\"\n          active-text-color=\"#0060d6\">\n          <el-menu-item index=\"1\">工作台</el-menu-item>\n          <el-menu-item index=\"2\">合同</el-menu-item>    \n          <el-menu-item index=\"3\">项目</el-menu-item>\n          <el-menu-item index=\"4\">需求</el-menu-item>\n          <el-menu-item index=\"5\">缺陷</el-menu-item>\n          <el-menu-item index=\"6\">PMO</el-menu-item>\n        </el-menu>\n      </el-col>\n      <el-col :span=\"3\" style=\"background-color:white;margin:0px;padding:0px;height:100px;text-align:center\">\n        <el-button icon=\"el-icon-user\" style=\"font-size:15px;text-align:center\" type=\"text\" @click=\"logoutComfirm\">userID</el-button>\n      </el-col>/\n    </el-row>\n  </el-header>\n  <div style=\"z-index:100;border:0.5px solid  lightgray;width:100%;\"></div>\n <el-container  style=\"margin:0px;min-height:860px\">\n    <el-header  style=\"background-color: #e5f2ff;padding:0px;margin:0px\">\n    <div class=\"line\"></div>\n    <el-menu\n      :default-active=\"$route.path\"\n      class=\"el-menu-demo\"\n      mode=\"horizontal\"\n      router\n      @select=\"handleSelect\"\n      background-color=\"white\"\n      text-color=\"black\"\n      active-text-color=\"#0060d6\">\n      <el-menu-item index=\"/Bug\" @select=\"routerToBug\">\n        Bug\n      </el-menu-item>\n      <el-menu-item index=\"/UseCase\">\n        测试用例\n      </el-menu-item>    \n      <el-menu-item index=\"/Plan\">\n        测试计划\n      </el-menu-item>\n      <el-menu-item index=\"/Chart\">\n        报表\n      </el-menu-item>\n    </el-menu>\n  </el-header>\n\n  <el-container  style=\"background-color: #e5f2ff;height:100%;margin:0px\">\n    <el-aside id=\"side\"  width=\"300px\" style=\"padding:10px;margin:10px;height:100%\" >\n        <el-select v-model=\"value\" placeholder=\"请选择\" style=\"margin-top:25px;margin-left:30px\">       \n        <el-option\n          v-for=\"item in options\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\">\n        </el-option>\n      </el-select>\n      <h4 style=\"margin-left:10px;color:black\">模块列表</h4>\n    <div style=\"display:flex;justify-content:flex-end\">\n      <el-button type=\"text\" @click=\"methodManage\" v-show=\"leftShow1\" style=\"margin-right:20px;margin-bottom:10px\">模块管理</el-button>\n      <el-button type=\"text\" @click=\"methodManage();dialogFormVisible = true\" v-show=\"leftShow2\" style=\"margin-right:20px;margin-bottom:10px\">+增加模块</el-button>\n        \n        <!--弹窗部分-->\n        <el-dialog title=\"添加模块\" :visible.sync=\"dialogFormVisible\" >\n          <el-form :model=\"form\">\n          <el-form-item label=\"模块名称\" :label-width=\"formLabelWidth\">\n            <el-input  v-model=\"form_name\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"模块描述\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"form_description\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\" >\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"NewModuleGo();dialogFormVisible = false\">确 定</el-button>\n          </div>\n        </el-dialog>\n\n\n      <el-button type=\"text\" @click=\"methodManage\" v-show=\"leftShow3\" style=\"margin-right:20px;margin-bottom:10px\">取消</el-button>\n    </div>\n \n   <!-- 导航菜单 -->\n    <div class=\"custom-tree-container\">\n      <div class=\"block\">\n        <!-- <p>使用 scoped slot</p> -->\n        \n        <el-tree\n          :data=\"data\"\n          show-checkbox\n          node-key=\"id\"\n          :expand-on-click-node=\"false\"\n          @node-drag-start=\"handleDragStart\"\n          @node-drag-enter=\"handleDragEnter\"\n          @node-drag-leave=\"handleDragLeave\"\n          @node-drag-over=\"handleDragOver\"\n          @node-drag-end=\"handleDragEnd\"\n          @node-drop=\"handleDrop\"\n          @node-click=\"myEvent\"\n          draggable\n          :allow-drop=\"allowDrop\"\n          :allow-drag=\"allowDrag\"\n        >\n          <span\n            class=\"custom-tree-node\"\n            slot-scope=\"{ node, data }\"\n            @mouseenter=\"onMouseOver($event)\"\n            @mouseleave=\"onMouseOut($event)\"\n          >\n            <span v-if=\"!data.isEdit\">{{ node.label }}</span>\n            <span class=\"isEdit\">\n              <!-- 编辑状态 -->\n              <div v-if=\"data.isEdit\">\n                <el-input\n                  v-model=\"data.label\"\n                  autofocus\n                  size=\"mini\"\n                  :ref=\"'slotTreeInput' + data[id]\"\n                  @blur.stop=\"handleInput(node, data)\"\n                  @keyup.enter.native=\"handleInput(node, data)\"\n                ></el-input>\n              </div>\n              <!-- 非编辑状态 -->\n              <div v-else>\n                <!-- 名称： 新增节点增加class（is-new） -->\n                <span\n                  :class=\"[\n                    data[id] < NODE_ID_START ? 'is-new' : '',\n                    'comp-tr-node--name',\n                  ]\"\n                >\n                </span>\n              </div>\n \n              <span class=\"comp-tr-node--btns\" v-show=\"false\">\n                <el-dropdown trigger=\"click\" @visible-change=\"handleDropdown\">\n                  <i class=\"el-icon-more\"></i>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item @click.native=\"() => append(node, data)\">\n                      <i class=\"el-icon-circle-plus-outline\"></i\n                      >新增</el-dropdown-item\n                    >\n                    <el-dropdown-item @click.native=\"handleEdit(node, data)\"\n                      ><i class=\"el-icon-edit\"></i>编辑</el-dropdown-item\n                    >\n                    <el-dropdown-item @click.native=\"() => remove(node, data)\"\n                      ><li class=\"el-icon-delete\"></li>\n                      删除</el-dropdown-item\n                    >\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </span>\n            </span>\n          </span>\n        </el-tree>\n      \n        \n      </div>\n    </div>\n\n    </el-aside>\n    <router-view></router-view>\n     </el-container>\n  </el-container>\n</el-container>\n</template>\n<style >\n\n\n  .allCase {\n    margin-left: 8px;\n    color: #606266;\n    font-size: 14px;\n  }\n\n\n.el-icon-plus {\n  margin: 10px 0 0 22px;\n  color: #606266;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n\n\n\n.el-tree {\n  height: 100%;\n  \n    }\n  \n\n.el-row {\n    margin-bottom: 20px;\n  }\n  .el-col {\n    border-radius: 4px;\n  }\n   .grid-content {\n    border-radius: 4px;\n    min-height: 36px;\n  }\n .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n.test{\nborder:1px solid  #eaff00;\n}\n.kqtlt{\n      text-align: center;\n    line-height: 60px;\n}\n\n.el-header, .el-footer {\n    background-color: white;\n    color: #D3DCE6;\n\n  }\n  \n  .el-aside {\n    background-color: white;\n    color: #D3DCE6;\n\n  }\n  \n  .el-main {\n    background-color: white;\n    color: #D3DCE6;\n  }\n  \n  body > .el-container {\n    margin-bottom: 40px;\n  }\n  \n  .el-container:nth-child(5) .el-aside,\n  .el-container:nth-child(6) .el-aside {\n    line-height: 260px;\n  }\n  \n  .el-container:nth-child(7) .el-aside {\n    line-height: 320px;\n  }\n</style>\n<script>\nlet id = 1000;\nimport BugData from './components/Bug.vue'\nexport default {\n  methods: {\n    logoutComfirm(){\n       this.$confirm('要退出登录吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$message({\n            type: 'success',\n            message: '已退出登录'\n          });\n          this.$router.replace({path: '/'});\n          location.reload();\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消操作'\n          });          \n        });\n    },\n\n     //所有用例列表接口\n    handleAllCase() {},\n    //el-tree点击事件\n    myEvent(d1, d2, d3) {\n      this.$emit(\"myEvent\", d1.id);\n    }, //d1.label\n    //下拉列表\n    handleDropdown(v) {\n      this.dropdownShow = v;\n      if (v) return;\n      this.currentEle.style.cssText += \"display:none\";\n    },\n    //增删改鼠标移入移出隐藏显示\n    //鼠标移入\n    onMouseOver: function (event) {\n      event.target.parentElement.querySelector(\n        \".comp-tr-node--btns\"\n      ).style.cssText += \"display:block\";\n      this.currentEle = event.target.parentElement.querySelector(\n        \".comp-tr-node--btns\"\n      );\n    },\n    //鼠标移出\n    onMouseOut: function (event) {\n      if (this.dropdownShow) return;\n      event.target.parentElement.querySelector(\n        \".comp-tr-node--btns\"\n      ).style.cssText += \"display:none\";\n    },\n    //新增一级目录模块点击事件\n    handleNewMoudle() {\n      this.data.push({\n        id: id++,\n        label: \"未命名模块\",\n        children: [],\n        isEdit: true,\n      });\n    },\n\n    //确定之后加入tree内\n    NewModuleGo() {\n        this.data.push({\n        id: id++,\n        label: this.form_name,\n        children: [],\n        isEdit: false,\n      });\n    },\n\n    //新增按钮\n    append(node, data) {\n      if (node.level >= this.MAX_LEVEL) {\n        this.$message.warning(\n          \"当前目录已达到\" + this.MAX_LEVEL + \"级，无法新增！\"\n        );\n        return false;\n      }\n      //新定义一个对象\n      const newChild = {\n        id: id++,\n        label: \"请输入模块名\",\n        children: [],\n        isEdit: true,\n      };\n      if (!data.children) {\n        this.$set(data, \"children\", []);\n      }\n      data.children.push(newChild);\n      //新增子节点到3级\n      console.log(node, data);\n \n      this.$nextTick(() => {\n        if (this.$refs[\"slotTreeInput\" + data[this.id]]) {\n          this.$refs[\"slotTreeInput\" + data[this.id]].$refs.input.focus();\n        }\n      });\n    },\n    //删除按钮\n    remove(node, data) {\n      const parent = node.parent;\n      const children = parent.data.children || parent.data;\n      const index = children.findIndex((d) => d.id === data.id);\n      children.splice(index, 1);\n    },\n       \n    //编辑按钮\n    handleInput(node, data) {\n      // 修改节点\n      console.log(node, data);\n      // 退出编辑状态\n      if (data.isEdit) {\n        this.$set(data, \"isEdit\", false);\n      }\n    },\n    handleEdit(node, data) {\n      // 编辑节点\n      console.log(node, data);\n      // 设置编辑状态\n      if (!data.isEdit) {\n        this.$set(data, \"isEdit\", true);\n      }\n \n      // 输入框聚焦\n      this.$nextTick(() => {\n        if (this.$refs[\"slotTreeInput\" + data[this.id]]) {\n          this.$refs[\"slotTreeInput\" + data[this.id]].$refs.input.focus();\n        }\n      });\n    },\n \n    //拖拽点击事件\n    handleDragStart(node, ev) {\n      // console.log(\"drag start\", node);\n    },\n    handleDragEnter(draggingNode, dropNode, ev) {\n      //console.log(\"tree drag enter: \", dropNode.label);\n    },\n    handleDragLeave(draggingNode, dropNode, ev) {\n      // console.log(\"tree drag leave: \", dropNode.label);\n    },\n    handleDragOver(draggingNode, dropNode, ev) {\n      // console.log(\"tree drag over: \", dropNode.label);\n    },\n    handleDragEnd(draggingNode, dropNode, dropType, ev) {\n      // console.log(\"tree drag end: \", dropNode && dropNode.label, dropType);\n    },\n    handleDrop(draggingNode, dropNode, dropType, ev) {\n      // console.log(\"tree drop: \", dropNode.label, dropType);\n    },\n    //拖拽点击事件\n    allowDrop(draggingNode, dropNode, type) {\n      if (dropNode.data.label === \"二级 3-1\") {\n        return type !== \"inner\";\n      } else {\n        return true;\n      }\n    },\n    allowDrag(draggingNode) {\n      return draggingNode.data.label.indexOf(\"三级 3-2-2\") === -1;\n    },\n\n\n\n    //顶层标签页切换\n    handleSelect(key, keyPath) \n      {\n        console.log(key, keyPath);\n      },\n\n    //模块管理\n    methodManage () {\n      this.leftShow1 = !this.leftShow1,\n      this.leftShow2 = !this.leftShow2,\n      this.leftShow3 = !this.leftShow3\n    },\n\n    //模块选择\n\n  },\n\n\n//树形hhh\nprops: {\n    bool: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  created() {\n    // 初始值\n    this.startId = this.NODE_ID_START;\n  },\n\n  data () {\n    \n\n    //模块选择树部分\n    const data = [{\n        id: 1,\n        label: '用例管理',\n        children: [{\n          id: 4,\n          label: '用例first',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2'\n        }]\n      }];\n    return {\n      form_name:\"\",\n      form_description:\"\",\n      \n      data: JSON.parse(JSON.stringify(data)),\n      currentEle: null, //操作下拉列表 当前图表元素 省略号\n      dropdownShow: false, //下拉列表当前显示状态\n      setTree: [], // tree数据\n      id: \"id\", // id对应字段\n      MAX_LEVEL: 2, // 设定最大层级\n      NODE_ID_START: 0, // 新增节点id，逐次递减\n      startId: null,\n      //页面可拖拽\n      defaultProps: {\n        children: \"children\",\n        label: \"label\",\n      },\n\n\n\n       dialogFormVisible:false, \n       circleUrl: \"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\",\n      //顶层标签页切换\n      activeIndex2: '1',\n      //左侧模块\n      //树部分\n      data: JSON.parse(JSON.stringify(data)),\n      data: JSON.parse(JSON.stringify(data)),\n      //模块管理部分\n      form: {\n          name: '',\n          region: '',\n          date1: '',\n          date2: '',\n          delivery: true,\n          type: [],\n          resource: '',\n          desc: ''\n        },\n\n      leftShow1: true,\n      leftShow2: false,\n      leftShow3: false,\n      //项目选择部分\n      options: [{\n        value: '选项1',\n        label: '黄金糕'\n      }, {\n        value: '选项2',\n        label: '双皮奶'\n      }, {\n        value: '选项3',\n        label: '蚵仔煎'\n      }, {\n        value: '选项4',\n        label: '龙须面'\n      }, {\n        value: '选项5',\n        label: '北京烤鸭'\n      }],\n      value: '',\n       props: {\n          label: 'name',\n          children: 'zones'\n        },\n        count: 1\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}
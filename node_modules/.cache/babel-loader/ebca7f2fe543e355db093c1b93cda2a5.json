{"ast":null,"code":"import isPlainObject from 'lodash/isPlainObject';\nvar ObjProto = Object.prototype;\nvar toString = ObjProto.toString;\nexport var hasOwn = ObjProto.hasOwnProperty;\nvar FN_MATCH_REGEXP = /^\\s*function (\\w+)/; // https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L159\n\nexport var getType = function getType(fn) {\n  var type = fn !== null && fn !== undefined ? fn.type ? fn.type : fn : null;\n  var match = type && type.toString().match(FN_MATCH_REGEXP);\n  return match && match[1];\n};\nexport var getNativeType = function getNativeType(value) {\n  if (value === null || value === undefined) return null;\n  var match = value.constructor.toString().match(FN_MATCH_REGEXP);\n  return match && match[1];\n};\n/**\r\n * No-op function\r\n */\n\nexport var noop = function noop() {};\n/**\r\n * Checks for a own property in an object\r\n *\r\n * @param {object} obj - Object\r\n * @param {string} prop - Property to check\r\n */\n\nexport var has = function has(obj, prop) {\n  return hasOwn.call(obj, prop);\n};\n/**\r\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n * @param {*} value - The value to be tested for being an integer.\r\n * @returns {boolean}\r\n */\n\nexport var isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n/**\r\n * Determines whether the passed value is an Array.\r\n *\r\n * @param {*} value - The value to be tested for being an array.\r\n * @returns {boolean}\r\n */\n\nexport var isArray = Array.isArray || function (value) {\n  return toString.call(value) === '[object Array]';\n};\n/**\r\n * Checks if a value is a function\r\n *\r\n * @param {any} value - Value to check\r\n * @returns {boolean}\r\n */\n\nexport var isFunction = function isFunction(value) {\n  return toString.call(value) === '[object Function]';\n};\n/**\r\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\r\n *\r\n * @param {object} type - Object to enhance\r\n */\n\nexport var withDefault = function withDefault(type) {\n  Object.defineProperty(type, 'def', {\n    value: function value(def) {\n      if (def === undefined && this['default'] === undefined) {\n        this['default'] = undefined;\n        return this;\n      }\n\n      if (!isFunction(def) && !validateType(this, def)) {\n        warn(this._vueTypes_name + ' - invalid default value: \"' + def + '\"', def);\n        return this;\n      }\n\n      this['default'] = isArray(def) || isPlainObject(def) ? function () {\n        return def;\n      } : def;\n      return this;\n    },\n    enumerable: false,\n    writable: false\n  });\n};\n/**\r\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\r\n *\r\n * @param {object} type - Object to enhance\r\n */\n\nexport var withRequired = function withRequired(type) {\n  Object.defineProperty(type, 'isRequired', {\n    get: function get() {\n      this.required = true;\n      return this;\n    },\n    enumerable: false\n  });\n};\n/**\r\n * Adds `isRequired` and `def` modifiers to an object\r\n *\r\n * @param {string} name - Type internal name\r\n * @param {object} obj - Object to enhance\r\n * @returns {object}\r\n */\n\nexport var toType = function toType(name, obj) {\n  Object.defineProperty(obj, '_vueTypes_name', {\n    enumerable: false,\n    writable: false,\n    value: name\n  });\n  withRequired(obj);\n  withDefault(obj);\n\n  if (isFunction(obj.validator)) {\n    obj.validator = obj.validator.bind(obj);\n  }\n\n  return obj;\n};\n/**\r\n * Validates a given value against a prop type object\r\n *\r\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\r\n * @param {*} value - Value to check\r\n * @param {boolean} silent - Silence warnings\r\n * @returns {boolean}\r\n */\n\nexport var validateType = function validateType(type, value) {\n  var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var typeToCheck = type;\n  var valid = true;\n  var expectedType = void 0;\n\n  if (!isPlainObject(type)) {\n    typeToCheck = {\n      type: type\n    };\n  }\n\n  var namePrefix = typeToCheck._vueTypes_name ? typeToCheck._vueTypes_name + ' - ' : '';\n\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\n    if (isArray(typeToCheck.type)) {\n      valid = typeToCheck.type.some(function (type) {\n        return validateType(type, value, true);\n      });\n      expectedType = typeToCheck.type.map(function (type) {\n        return getType(type);\n      }).join(' or ');\n    } else {\n      expectedType = getType(typeToCheck);\n\n      if (expectedType === 'Array') {\n        valid = isArray(value);\n      } else if (expectedType === 'Object') {\n        valid = isPlainObject(value);\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\n        valid = getNativeType(value) === expectedType;\n      } else {\n        valid = value instanceof typeToCheck.type;\n      }\n    }\n  }\n\n  if (!valid) {\n    silent === false && warn(namePrefix + 'value \"' + value + '\" should be of type \"' + expectedType + '\"');\n    return false;\n  }\n\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\n    valid = typeToCheck.validator(value);\n    if (!valid && silent === false) warn(namePrefix + 'custom validation failed');\n    return valid;\n  }\n\n  return valid;\n};\nvar warn = noop;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function warn(msg) {\n    if (hasConsole) {\n      console.warn('[VueTypes warn]: ' + msg);\n    }\n  };\n}\n\nexport { warn };","map":{"version":3,"names":["isPlainObject","ObjProto","Object","prototype","toString","hasOwn","hasOwnProperty","FN_MATCH_REGEXP","getType","fn","type","undefined","match","getNativeType","value","constructor","noop","has","obj","prop","call","isInteger","Number","isFinite","Math","floor","isArray","Array","isFunction","withDefault","defineProperty","def","validateType","warn","_vueTypes_name","enumerable","writable","withRequired","get","required","toType","name","validator","bind","silent","arguments","length","typeToCheck","valid","expectedType","namePrefix","some","map","join","process","env","NODE_ENV","hasConsole","console","msg"],"sources":["D:/Desktop/大三上/实训/项目2.0/xbr/前端/node_modules/ant-design-vue/es/_util/vue-types/utils.js"],"sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\r\n\r\nvar ObjProto = Object.prototype;\r\nvar toString = ObjProto.toString;\r\nexport var hasOwn = ObjProto.hasOwnProperty;\r\n\r\nvar FN_MATCH_REGEXP = /^\\s*function (\\w+)/;\r\n\r\n// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L159\r\nexport var getType = function getType(fn) {\r\n  var type = fn !== null && fn !== undefined ? fn.type ? fn.type : fn : null;\r\n  var match = type && type.toString().match(FN_MATCH_REGEXP);\r\n  return match && match[1];\r\n};\r\n\r\nexport var getNativeType = function getNativeType(value) {\r\n  if (value === null || value === undefined) return null;\r\n  var match = value.constructor.toString().match(FN_MATCH_REGEXP);\r\n  return match && match[1];\r\n};\r\n\r\n/**\r\n * No-op function\r\n */\r\nexport var noop = function noop() {};\r\n\r\n/**\r\n * Checks for a own property in an object\r\n *\r\n * @param {object} obj - Object\r\n * @param {string} prop - Property to check\r\n */\r\nexport var has = function has(obj, prop) {\r\n  return hasOwn.call(obj, prop);\r\n};\r\n\r\n/**\r\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n * @param {*} value - The value to be tested for being an integer.\r\n * @returns {boolean}\r\n */\r\nexport var isInteger = Number.isInteger || function (value) {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Determines whether the passed value is an Array.\r\n *\r\n * @param {*} value - The value to be tested for being an array.\r\n * @returns {boolean}\r\n */\r\nexport var isArray = Array.isArray || function (value) {\r\n  return toString.call(value) === '[object Array]';\r\n};\r\n\r\n/**\r\n * Checks if a value is a function\r\n *\r\n * @param {any} value - Value to check\r\n * @returns {boolean}\r\n */\r\nexport var isFunction = function isFunction(value) {\r\n  return toString.call(value) === '[object Function]';\r\n};\r\n\r\n/**\r\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\r\n *\r\n * @param {object} type - Object to enhance\r\n */\r\nexport var withDefault = function withDefault(type) {\r\n  Object.defineProperty(type, 'def', {\r\n    value: function value(def) {\r\n      if (def === undefined && this['default'] === undefined) {\r\n        this['default'] = undefined;\r\n        return this;\r\n      }\r\n      if (!isFunction(def) && !validateType(this, def)) {\r\n        warn(this._vueTypes_name + ' - invalid default value: \"' + def + '\"', def);\r\n        return this;\r\n      }\r\n      this['default'] = isArray(def) || isPlainObject(def) ? function () {\r\n        return def;\r\n      } : def;\r\n\r\n      return this;\r\n    },\r\n\r\n    enumerable: false,\r\n    writable: false\r\n  });\r\n};\r\n\r\n/**\r\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\r\n *\r\n * @param {object} type - Object to enhance\r\n */\r\nexport var withRequired = function withRequired(type) {\r\n  Object.defineProperty(type, 'isRequired', {\r\n    get: function get() {\r\n      this.required = true;\r\n      return this;\r\n    },\r\n\r\n    enumerable: false\r\n  });\r\n};\r\n\r\n/**\r\n * Adds `isRequired` and `def` modifiers to an object\r\n *\r\n * @param {string} name - Type internal name\r\n * @param {object} obj - Object to enhance\r\n * @returns {object}\r\n */\r\nexport var toType = function toType(name, obj) {\r\n  Object.defineProperty(obj, '_vueTypes_name', {\r\n    enumerable: false,\r\n    writable: false,\r\n    value: name\r\n  });\r\n  withRequired(obj);\r\n  withDefault(obj);\r\n\r\n  if (isFunction(obj.validator)) {\r\n    obj.validator = obj.validator.bind(obj);\r\n  }\r\n  return obj;\r\n};\r\n\r\n/**\r\n * Validates a given value against a prop type object\r\n *\r\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\r\n * @param {*} value - Value to check\r\n * @param {boolean} silent - Silence warnings\r\n * @returns {boolean}\r\n */\r\nexport var validateType = function validateType(type, value) {\r\n  var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  var typeToCheck = type;\r\n  var valid = true;\r\n  var expectedType = void 0;\r\n  if (!isPlainObject(type)) {\r\n    typeToCheck = { type: type };\r\n  }\r\n  var namePrefix = typeToCheck._vueTypes_name ? typeToCheck._vueTypes_name + ' - ' : '';\r\n\r\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\r\n    if (isArray(typeToCheck.type)) {\r\n      valid = typeToCheck.type.some(function (type) {\r\n        return validateType(type, value, true);\r\n      });\r\n      expectedType = typeToCheck.type.map(function (type) {\r\n        return getType(type);\r\n      }).join(' or ');\r\n    } else {\r\n      expectedType = getType(typeToCheck);\r\n\r\n      if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n      } else if (expectedType === 'Object') {\r\n        valid = isPlainObject(value);\r\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\r\n        valid = getNativeType(value) === expectedType;\r\n      } else {\r\n        valid = value instanceof typeToCheck.type;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!valid) {\r\n    silent === false && warn(namePrefix + 'value \"' + value + '\" should be of type \"' + expectedType + '\"');\r\n    return false;\r\n  }\r\n\r\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\r\n    valid = typeToCheck.validator(value);\r\n    if (!valid && silent === false) warn(namePrefix + 'custom validation failed');\r\n    return valid;\r\n  }\r\n  return valid;\r\n};\r\n\r\nvar warn = noop;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  var hasConsole = typeof console !== 'undefined';\r\n  warn = function warn(msg) {\r\n    if (hasConsole) {\r\n      console.warn('[VueTypes warn]: ' + msg);\r\n    }\r\n  };\r\n}\r\n\r\nexport { warn };"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Cut input selection into 2 part and return text before selection start\r\n */\nexport function getBeforeSelectionText(input) {\n  var selectionStart = input.selectionStart;\n  return input.value.slice(0, selectionStart);\n}\n\nfunction lower(char) {\n  return (char || '').toLowerCase();\n}\n/**\r\n * Find the last match prefix index\r\n */\n\n\nexport function getLastMeasureIndex(text) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return prefixList.reduce(function (lastMatch, prefixStr) {\n    var lastIndex = text.lastIndexOf(prefixStr);\n\n    if (lastIndex > lastMatch.location) {\n      return {\n        location: lastIndex,\n        prefix: prefixStr\n      };\n    }\n\n    return lastMatch;\n  }, {\n    location: -1,\n    prefix: ''\n  });\n}\n\nfunction reduceText(text, targetText, split) {\n  var firstChar = text[0];\n\n  if (!firstChar || firstChar === split) {\n    return text;\n  } // Reuse rest text as it can\n\n\n  var restText = text;\n  var targetTextLen = targetText.length;\n\n  for (var i = 0; i < targetTextLen; i += 1) {\n    if (lower(restText[i]) !== lower(targetText[i])) {\n      restText = restText.slice(i);\n      break;\n    } else if (i === targetTextLen - 1) {\n      restText = restText.slice(targetTextLen);\n    }\n  }\n\n  return restText;\n}\n/**\r\n * Paint targetText into current text:\r\n *  text: little@litest\r\n *  targetText: light\r\n *  => little @light test\r\n */\n\n\nexport function replaceWithMeasure(text, measureConfig) {\n  var measureLocation = measureConfig.measureLocation,\n      prefix = measureConfig.prefix,\n      targetText = measureConfig.targetText,\n      selectionStart = measureConfig.selectionStart,\n      split = measureConfig.split; // Before text will append one space if have other text\n\n  var beforeMeasureText = text.slice(0, measureLocation);\n\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\n  }\n\n  if (beforeMeasureText) {\n    beforeMeasureText = '' + beforeMeasureText + split;\n  } // Cut duplicate string with current targetText\n\n\n  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\n\n  if (restText.slice(0, split.length) === split) {\n    restText = restText.slice(split.length);\n  }\n\n  var connectedStartText = '' + beforeMeasureText + prefix + targetText + split;\n  return {\n    text: '' + connectedStartText + restText,\n    selectionLocation: connectedStartText.length\n  };\n}\nexport function setInputSelection(input, location) {\n  input.setSelectionRange(location, location);\n  /**\r\n   * Reset caret into view.\r\n   * Since this function always called by user control, it's safe to focus element.\r\n   */\n\n  input.blur();\n  input.focus();\n}\nexport function validateSearch() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var split = props.split;\n  return !split || text.indexOf(split) === -1;\n}\nexport function filterOption() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$value = _ref.value,\n      value = _ref$value === undefined ? '' : _ref$value;\n\n  var lowerCase = input.toLowerCase();\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\n}","map":{"version":3,"names":["getBeforeSelectionText","input","selectionStart","value","slice","lower","char","toLowerCase","getLastMeasureIndex","text","prefix","arguments","length","undefined","prefixList","Array","isArray","reduce","lastMatch","prefixStr","lastIndex","lastIndexOf","location","reduceText","targetText","split","firstChar","restText","targetTextLen","i","replaceWithMeasure","measureConfig","measureLocation","beforeMeasureText","connectedStartText","selectionLocation","setInputSelection","setSelectionRange","blur","focus","validateSearch","props","indexOf","filterOption","_ref","_ref$value","lowerCase"],"sources":["D:/Desktop/大三上/实训/项目2.0/xbr/前端/node_modules/ant-design-vue/es/vc-mentions/src/util.js"],"sourcesContent":["/**\r\n * Cut input selection into 2 part and return text before selection start\r\n */\r\nexport function getBeforeSelectionText(input) {\r\n  var selectionStart = input.selectionStart;\r\n\r\n  return input.value.slice(0, selectionStart);\r\n}\r\n\r\nfunction lower(char) {\r\n  return (char || '').toLowerCase();\r\n}\r\n\r\n/**\r\n * Find the last match prefix index\r\n */\r\nexport function getLastMeasureIndex(text) {\r\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n\r\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\r\n  return prefixList.reduce(function (lastMatch, prefixStr) {\r\n    var lastIndex = text.lastIndexOf(prefixStr);\r\n    if (lastIndex > lastMatch.location) {\r\n      return {\r\n        location: lastIndex,\r\n        prefix: prefixStr\r\n      };\r\n    }\r\n    return lastMatch;\r\n  }, { location: -1, prefix: '' });\r\n}\r\n\r\nfunction reduceText(text, targetText, split) {\r\n  var firstChar = text[0];\r\n  if (!firstChar || firstChar === split) {\r\n    return text;\r\n  }\r\n\r\n  // Reuse rest text as it can\r\n  var restText = text;\r\n  var targetTextLen = targetText.length;\r\n  for (var i = 0; i < targetTextLen; i += 1) {\r\n    if (lower(restText[i]) !== lower(targetText[i])) {\r\n      restText = restText.slice(i);\r\n      break;\r\n    } else if (i === targetTextLen - 1) {\r\n      restText = restText.slice(targetTextLen);\r\n    }\r\n  }\r\n\r\n  return restText;\r\n}\r\n\r\n/**\r\n * Paint targetText into current text:\r\n *  text: little@litest\r\n *  targetText: light\r\n *  => little @light test\r\n */\r\nexport function replaceWithMeasure(text, measureConfig) {\r\n  var measureLocation = measureConfig.measureLocation,\r\n      prefix = measureConfig.prefix,\r\n      targetText = measureConfig.targetText,\r\n      selectionStart = measureConfig.selectionStart,\r\n      split = measureConfig.split;\r\n\r\n  // Before text will append one space if have other text\r\n\r\n  var beforeMeasureText = text.slice(0, measureLocation);\r\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\r\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\r\n  }\r\n  if (beforeMeasureText) {\r\n    beforeMeasureText = '' + beforeMeasureText + split;\r\n  }\r\n\r\n  // Cut duplicate string with current targetText\r\n  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\r\n  if (restText.slice(0, split.length) === split) {\r\n    restText = restText.slice(split.length);\r\n  }\r\n\r\n  var connectedStartText = '' + beforeMeasureText + prefix + targetText + split;\r\n\r\n  return {\r\n    text: '' + connectedStartText + restText,\r\n    selectionLocation: connectedStartText.length\r\n  };\r\n}\r\n\r\nexport function setInputSelection(input, location) {\r\n  input.setSelectionRange(location, location);\r\n\r\n  /**\r\n   * Reset caret into view.\r\n   * Since this function always called by user control, it's safe to focus element.\r\n   */\r\n  input.blur();\r\n  input.focus();\r\n}\r\n\r\nexport function validateSearch() {\r\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var split = props.split;\r\n\r\n  return !split || text.indexOf(split) === -1;\r\n}\r\n\r\nexport function filterOption() {\r\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\r\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\r\n      _ref$value = _ref.value,\r\n      value = _ref$value === undefined ? '' : _ref$value;\r\n\r\n  var lowerCase = input.toLowerCase();\r\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}